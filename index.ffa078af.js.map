{"mappings":"","sources":["js/campeon.js"],"sourcesContent":["class Campeon {\r\n    constructor(data) {\r\n        this.name = data.name; // Nombre del campeón\r\n        this.imageUrl = `https://ddragon.leagueoflegends.com/cdn/14.19.1/img/champion/${data.image.full}`; // URL de la imagen del campeón\r\n        this.title = data.title || \"Sin título\"; // Título del campeón\r\n        this.id = data.id; // ID del campeón\r\n        this.skins = []; // Inicializar como un array vacío\r\n        this.roles = data.tags; // Roles del campeón\r\n        this.blurb = data.blurb; // Descripción del campeón\r\n        this.info = data.info; // Información de ataque, defensa, magia y dificultad\r\n        this.currentSkinIndex = 0; // Inicializar el índice de skin\r\n        this.abilities = []; // Inicializar como un array vacío para habilidades\r\n\r\n        // Cargar skins y habilidades\r\n        this.loadSkins();\r\n        this.loadAbilities();\r\n    }\r\n\r\n    async loadSkins() {\r\n        try {\r\n            const response = await fetch(`https://ddragon.leagueoflegends.com/cdn/14.19.1/data/es_MX/champion/${this.id}.json`);\r\n            const data = await response.json();\r\n\r\n            // Asignar la lista de skins\r\n            this.skins = data.data[this.id].skins;\r\n            console.log(\"Skins disponibles:\", this.skins); // Verificar las skins\r\n        } catch (error) {\r\n            console.error(\"Error al cargar las skins:\", error);\r\n        }\r\n    }\r\n\r\n    async loadAbilities() {\r\n        try {\r\n            const response = await fetch(`https://ddragon.leagueoflegends.com/cdn/14.19.1/data/es_MX/champion/${this.id}.json`);\r\n            const data = await response.json();\r\n            \r\n            this.abilities = data.data[this.id].spells || []; // Asegúrate de que abilities sea un array\r\n            console.log(\"Habilidades disponibles:\", this.abilities); // Verificar las habilidades\r\n        } catch (error) {\r\n            console.error(\"Error al cargar las habilidades:\", error);\r\n        }\r\n    }\r\n\r\n    async checkImageExists(url) {\r\n        const response = await fetch(url, { method: 'HEAD' });\r\n        return response.ok; // Verifica si la imagen existe\r\n    }\r\n\r\n    async cambiarSkin(championImg) {\r\n        const maxSkins = this.skins.length; // Total de skins disponibles\r\n        console.log(`Total de skins: ${maxSkins}`);\r\n\r\n        // Incrementa currentSkinIndex\r\n        this.currentSkinIndex = (this.currentSkinIndex + 1) % (maxSkins + 1); // Incrementa y devuelve el nuevo número de skin (modulo para volver al principio)\r\n\r\n        let skinUrl;\r\n\r\n        // Determine the URL for the current skin\r\n        if (this.currentSkinIndex === 0) {\r\n            // Skin original\r\n            skinUrl = `https://ddragon.leagueoflegends.com/cdn/img/champion/loading/${this.id}_0.jpg`;\r\n        } else {\r\n            // Usar el id de la skin correcta\r\n            const skinId = this.skins[this.currentSkinIndex - 1].num; // Asegúrate de usar 'num' para obtener el número correcto de skin\r\n            skinUrl = `https://ddragon.leagueoflegends.com/cdn/img/champion/loading/${this.id}_${skinId}.jpg`;\r\n        }\r\n\r\n        const imageExists = await this.checkImageExists(skinUrl);\r\n        if (imageExists) {\r\n            championImg.src = skinUrl; // Cambia la imagen si existe\r\n        } else {\r\n            // Si la imagen no existe, simplemente vuelve a la skin original\r\n            this.currentSkinIndex = 0; // Reinicia el índice\r\n            championImg.src = `https://ddragon.leagueoflegends.com/cdn/img/champion/loading/${this.id}_0.jpg`; // Cambia a la skin original\r\n        }\r\n    }\r\n\r\n    crearElemento() {\r\n        const championDiv = document.createElement('div');\r\n        championDiv.classList.add('champion');\r\n\r\n        const img = document.createElement('img'); // Usar la etiqueta img para la imagen completa\r\n        img.src = this.imageUrl;\r\n        img.alt = this.name;\r\n        img.id = `img-${this.id}`; // Asignar un id a la imagen del campeón\r\n\r\n        const name = document.createElement('p');\r\n        name.textContent = this.name;\r\n\r\n        const additionalInfo = document.createElement('div');\r\n        additionalInfo.classList.add('additional-info'); // Contenedor para información adicional\r\n        additionalInfo.innerHTML = `\r\n            <p><strong>Roles:</strong> ${this.roles.join(', ')}</p>\r\n            <p><strong>Título:</strong> ${this.title}</p>\r\n        `;\r\n\r\n        championDiv.appendChild(img); // Agregar la imagen\r\n        championDiv.appendChild(name);\r\n        championDiv.appendChild(additionalInfo); // Agregar el contenedor de información adicional\r\n\r\n        // Evento para mostrar información del campeón\r\n        championDiv.addEventListener('click', () => {\r\n            this.mostrarInformacionCampeon();\r\n        });\r\n\r\n        return championDiv;\r\n    }\r\n\r\n    mostrarInformacionCampeon() {\r\n        const fullImageUrl = `https://ddragon.leagueoflegends.com/cdn/img/champion/loading/${this.id}_0.jpg`;\r\n    \r\n        // Crear o seleccionar el contenedor donde se mostrará la imagen grande\r\n        let imagenGrande = document.getElementById('imagen-grande');\r\n        if (!imagenGrande) {\r\n            imagenGrande = document.createElement('div');\r\n            imagenGrande.id = 'imagen-grande';\r\n            document.body.appendChild(imagenGrande);\r\n        }\r\n    \r\n        // Insertar la imagen y la información en el contenedor\r\n        imagenGrande.innerHTML = `\r\n            <div class=\"imagen-grande-container\">\r\n                <span id=\"cerrar-imagen-grande\">&times;</span>\r\n                <img id=\"img-grande\" src=\"${fullImageUrl}\" alt=\"Imagen Grande de ${this.name}\">\r\n                <div class=\"imagen-grande-texto\">\r\n                    <h2>${this.name}</h2>\r\n                    <p><strong>Título:</strong> ${this.title}</p>\r\n                    <p><strong>Descripción:</strong> ${this.blurb}</p>\r\n                    <h3>Atributos:</h3>\r\n                    <ul>\r\n                        <li><strong>Ataque:</strong> ${this.info.attack}</li>\r\n                        <li><strong>Defensa:</strong> ${this.info.defense}</li>\r\n                        <li><strong>Magia:</strong> ${this.info.magic}</li>\r\n                        <li><strong>Dificultad:</strong> ${this.info.difficulty}</li>\r\n                    </ul>\r\n                    <h3>Roles:</h3>\r\n                    <p>${this.roles.join(', ')}</p>\r\n                    <h3>Habilidades:</h3>\r\n                    <div class=\"abilities\">\r\n                        ${this.abilities.length > 0 ? this.abilities.map(spell => `\r\n                            <div class=\"ability\">\r\n                                <img src=\"https://ddragon.leagueoflegends.com/cdn/14.19.1/img/spell/${spell.image.full}\" alt=\"${spell.name}\">\r\n                                <p>${spell.name}</p>\r\n                                <p>${spell.description}</p>\r\n                            </div>\r\n                        `).join('') : '<p>No hay habilidades disponibles.</p>'}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    \r\n        // Mostrar el modal\r\n        imagenGrande.style.display = 'flex'; // Cambiado a 'flex' para centrar el contenido\r\n    \r\n        // Seleccionar el elemento de la imagen grande correctamente después de que se ha agregado al DOM\r\n        const imgGrandeElement = document.getElementById('img-grande');\r\n    \r\n        // Evento para cambiar la skin al hacer clic en la imagen grande\r\n        imgGrandeElement.onclick = async () => {\r\n            await this.cambiarSkin(imgGrandeElement);\r\n        };\r\n    \r\n        // Cerrar el modal al hacer clic en el botón de cierre\r\n        document.getElementById('cerrar-imagen-grande').onclick = () => {\r\n            imagenGrande.style.display = 'none';\r\n        };\r\n    }\r\n}\r\n"],"names":[],"version":3,"file":"index.ffa078af.js.map"}